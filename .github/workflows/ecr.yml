name: ECR Benchmark

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

permissions:
  id-token: write
  contents: read

jobs:
  benchmark-ecr:
    name: ${{ matrix.region }} - ${{ matrix.index }}
    runs-on: ubicloud
    strategy:
      fail-fast: false
      matrix:
        region: [eu-central-1, eu-west-2, eu-north-1, us-east-1, us-east-2, us-west-2, ap-southeast-2, ap-northeast-1, sa-east-1]
        index: [1, 2, 3, 4, 5]
    env:
      REPOSITORY_NAME: "ubicloud-benchmark/${{ matrix.region }}"
      IMAGE_NAME: "python:latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: arn:aws:iam::141729832908:role/ubicloud-benchmark-role
          aws-region: ${{ matrix.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Output full registry URL
        id: registry
        run: |
          image_url="${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ github.run_id }}-${{ matrix.index }}"
          echo "image_url=$image_url" >> $GITHUB_OUTPUT

      - name: Pull image from Docker Hub
        run: docker pull ${{ env.IMAGE_NAME }}

      - name: Tag image for ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ steps.registry.outputs.image_url }}

      - name: Benchmark push to ECR
        id: push
        run: |
          START=$(date +%s.%N)
          docker push ${{ steps.registry.outputs.image_url }}
          END=$(date +%s.%N)
          PUSH_TIME=$(echo "$END - $START" | bc -l | xargs printf "%.2f")
          echo "push_time=${PUSH_TIME}s" >> $GITHUB_OUTPUT
          echo "Push to ${{ matrix.region }} took ${PUSH_TIME}s"

      - name: Remove local images for clean pull benchmark
        run: |
          docker rmi ${{ steps.registry.outputs.image_url }}
          docker rmi ${{ env.IMAGE_NAME }}
          docker system prune -af

      - name: Benchmark pull from ECR
        id: pull
        run: |
          START=$(date +%s.%N)
          docker pull ${{ steps.registry.outputs.image_url }}
          END=$(date +%s.%N)
          PULL_TIME=$(echo "$END - $START" | bc -l | xargs printf "%.2f")
          echo "pull_time=${PULL_TIME}s" >> $GITHUB_OUTPUT
          echo "Pull from ${{ matrix.region }} took ${PULL_TIME}s"

      - name: Save benchmark result
        run: |
          echo "region=${{ matrix.region }}" > benchmark.txt
          echo "push_time=${{ steps.push.outputs.push_time }}" >> benchmark.txt
          echo "pull_time=${{ steps.pull.outputs.pull_time }}" >> benchmark.txt

      - name: Upload benchmark result
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-result-${{ matrix.region }}-${{ matrix.index }}
          path: benchmark.txt

      - name: Clean up ECR image
        if: always()
        run: |
          aws ecr batch-delete-image --repository-name ${{ env.REPOSITORY_NAME }} --image-ids imageTag=${{ github.run_id }} --region ${{ matrix.region }}

  report:
    if: always()
    needs: benchmark-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          path: benchmark-results

      - name: Generate summary table
        run: |
          echo "| Region | Push Time | Pull Time |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|---|" >> $GITHUB_STEP_SUMMARY
          for dir in benchmark-results/benchmark-result-*; do
            region=$(grep region "$dir/benchmark.txt" | cut -d= -f2)
            push_time=$(grep push_time "$dir/benchmark.txt" | cut -d= -f2)
            pull_time=$(grep pull_time "$dir/benchmark.txt" | cut -d= -f2)
            echo "| $region | $push_time | $pull_time |" >> $GITHUB_STEP_SUMMARY
          done
