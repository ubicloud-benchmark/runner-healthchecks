name: ECR Benchmark

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

permissions:
  id-token: write
  contents: read

jobs:
  benchmark-ecr:
    name: ${{ matrix.region }}
    runs-on: ubicloud
    strategy:
      matrix:
        region: [eu-central-1, eu-west-2, eu-north-1, us-east-1, us-east-2, us-west-2, ap-southeast-2, ap-northeast-1, sa-east-1]
    env:
      REPOSITORY_NAME: "ubicloud-benchmark/${{ matrix.region }}"
      IMAGE_NAME: "hello-world"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: arn:aws:iam::141729832908:role/ubicloud-benchmark-role
          aws-region: ${{ matrix.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Output full registry URL
        id: registry
        run: |
          image_url="${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ github.run_id }}"
          echo "image_url=$image_url" >> $GITHUB_OUTPUT

      - name: Pull image from Docker Hub
        run: docker pull ${{ env.IMAGE_NAME }}

      - name: Tag image for ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ steps.registry.outputs.image_url }}

      - name: Benchmark push to ECR
        id: push
        run: |
          start_time=$(date +%s%N)
          docker push ${{ steps.registry.outputs.image_url }}
          end_time=$(date +%s%N)
          PUSH_TIME=$(echo "scale=3; ($end_time - $start_time) / 1000000000" | bc)
          echo "push_time=${PUSH_TIME}s" >> $GITHUB_OUTPUT
          echo "Push to ${{ matrix.region }} took ${PUSH_TIME}s"

      - name: Remove local images for clean pull benchmark
        run: |
          docker rmi ${{ steps.registry.outputs.image_url }}
          docker rmi ${{ env.IMAGE_NAME }}
          docker system prune -af

      - name: Benchmark pull from ECR
        id: pull
        run: |
          start_time=$(date +%s%N)
          docker pull ${{ steps.registry.outputs.image_url }}
          end_time=$(date +%s%N)
          PULL_TIME=$(echo "scale=3; ($end_time - $start_time) / 1000000000" | bc)
          echo "pull_time=${PULL_TIME}s" >> $GITHUB_OUTPUT
          echo "Pull from ${{ matrix.region }} took ${PULL_TIME}s"

      - name: Update Job Summary
        run: |
          echo "| Operation | Time |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "| Push | ${{ steps.push.outputs.push_time }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Pull | ${{ steps.pull.outputs.pull_time }} |" >> $GITHUB_STEP_SUMMARY

      - name: Clean up ECR image
        if: always()
        run: |
          aws ecr batch-delete-image --repository-name ${{ env.REPOSITORY_NAME }} --image-ids imageTag=${{ github.run_id }} --region ${{ matrix.region }}
