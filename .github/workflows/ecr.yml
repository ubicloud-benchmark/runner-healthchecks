name: ECR Benchmark

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

permissions:
  id-token: write
  contents: read

jobs:
  benchmark-ecr:
    name: ${{ matrix.region }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [eu-central-1]
    env:
      REPOSITORY_NAME: "ubicloud-benchmark/${{ matrix.region }}"
      IMAGE_NAME: "hello-world"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: arn:aws:iam::141729832908:role/ubicloud-benchmark-role
          aws-region: ${{ matrix.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Output full registry URL
        id: registry
        run: |
          image_url="${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ github.run_id }}"
          echo "image_url=$image_url" >> $GITHUB_OUTPUT

      - name: Pull image from Docker Hub
        run: docker pull ${{ env.IMAGE_NAME }}

      - name: Tag image for ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ steps.registry.outputs.image_url }}

      - name: Benchmark push to ECR
        id: push
        run: |
          echo "--- Pushing to ${{ matrix.region }} ---"
          TIME_OUTPUT=$( { time docker push ${{ steps.registry.outputs.image_url }} > /dev/null; } 2>&1 )
          PUSH_TIME=$(echo "$TIME_OUTPUT" | grep real | awk '{print $2}')
          echo "push_time=$PUSH_TIME" >> $GITHUB_OUTPUT
          echo "Push to ${{ matrix.region }} took $PUSH_TIME"
          echo "------------------------------------"

      - name: Remove local image
        run: docker rmi ${{ steps.registry.outputs.image_url }}

      - name: Benchmark pull from ECR
        id: pull
        run: |
          echo "--- Pulling from ${{ matrix.region }} ---"
          TIME_OUTPUT=$( { time docker pull ${{ steps.registry.outputs.image_url }} > /dev/null; } 2>&1 )
          PULL_TIME=$(echo "$TIME_OUTPUT" | grep real | awk '{print $2}')
          echo "pull_time=$PULL_TIME" >> $GITHUB_OUTPUT
          echo "Pull from ${{ matrix.region }} took $PULL_TIME"
          echo "------------------------------------"

      - name: Update Job Summary
        run: |
          echo "## Benchmark Results for ${{ matrix.region }}" >> $GITHUB_STEP_SUMMARY
          echo "| Operation | Time |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "| Push | `${{ steps.push.outputs.push_time }}` |" >> $GITHUB_STEP_SUMMARY
          echo "| Pull | `${{ steps.pull.outputs.pull_time }}` |" >> $GITHUB_STEP_SUMMARY

      - name: Clean up ECR image
        if: always()
        run: |
          aws ecr batch-delete-image --repository-name ${{ env.REPOSITORY_NAME }} --image-ids imageTag=${{ github.run_id }} --region ${{ matrix.region }}
