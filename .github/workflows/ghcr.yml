name: ghcr Benchmark

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  benchmark-ghcr:
    name: GHCR Benchmark  ${{ matrix.runner }} ${{ matrix.index }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-22.04, ubicloud]
        index: [1,2,3,4,5]

    env:
      PACKAGE_NAME: "benchmark-ghcr-${{ github.run_id }}-${{ matrix.runner }}-${{ matrix.index }}"
      REPOSITORY_NAME: "ghcr.io/ubicloud-benchmark/benchmark-ghcr-${{ github.run_id }}-${{ matrix.runner }}-${{ matrix.index }}"
      IMAGE_NAME: "python:latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Output full registry URL
        id: registry
        run: |
          image_url="${{ env.REPOSITORY_NAME }}:${{ github.run_id }}"
          echo "image_url=$image_url" >> $GITHUB_OUTPUT

      - name: Pull image from Docker Hub
        run: docker pull ${{ env.IMAGE_NAME }}

      - name: Tag image for GHCR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ steps.registry.outputs.image_url }}

      - name: Benchmark push to GHCR
        id: push
        run: |
          START=$(date +%s.%N)
          docker push ${{ steps.registry.outputs.image_url }}
          END=$(date +%s.%N)
          PUSH_TIME=$(echo "$END - $START" | bc -l | xargs printf "%.2f")
          echo "push_time=${PUSH_TIME}s" >> $GITHUB_OUTPUT
          echo "Push took ${PUSH_TIME}s"

      - name: Remove local images for clean pull benchmark
        run: |
          docker rmi ${{ steps.registry.outputs.image_url }}
          docker rmi ${{ env.IMAGE_NAME }}
          docker system prune -af

      - name: Benchmark pull from GHCR
        id: pull
        run: |
          START=$(date +%s.%N)
          docker pull ${{ steps.registry.outputs.image_url }}
          END=$(date +%s.%N)
          PULL_TIME=$(echo "$END - $START" | bc -l | xargs printf "%.2f")
          echo "pull_time=${PULL_TIME}s" >> $GITHUB_OUTPUT
          echo "Pull took ${PULL_TIME}s"

      - name: Save benchmark result
        run: |
          echo "index=${{ matrix.index }}" > benchmark.txt
          echo "push_time=${{ steps.push.outputs.push_time }}" >> benchmark.txt
          echo "pull_time=${{ steps.pull.outputs.pull_time }}" >> benchmark.txt

      - name: Upload benchmark result
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-result-${{ matrix.index }}
          path: benchmark.txt

      - name: Clean up GHCR image
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.packages.deletePackageForOrg({
              package_type: 'container',
              package_name: process.env.PACKAGE_NAME,
              org: context.repo.owner
            })

  report:
    if: always()
    needs: benchmark-ghcr
    runs-on: ubuntu-latest
    steps:
      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          path: benchmark-results

      - name: Generate summary table
        run: |
          echo "| Index | Push Time | Pull Time |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|---|" >> $GITHUB_STEP_SUMMARY
          for dir in benchmark-results/benchmark-result-*; do
            index=$(grep index "$dir/benchmark.txt" | cut -d= -f2)
            push_time=$(grep push_time "$dir/benchmark.txt" | cut -d= -f2)
            pull_time=$(grep pull_time "$dir/benchmark.txt" | cut -d= -f2)
            echo "| $index | $push_time | $pull_time |" >> $GITHUB_STEP_SUMMARY
          done
